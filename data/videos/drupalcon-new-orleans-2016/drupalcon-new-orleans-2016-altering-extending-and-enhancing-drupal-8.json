{
    "abstract": "https://events.drupal.org/neworleans2016/sessions/altering-extending-and-enhancing-drupal-8",
    "description": "A large part of Drupal's appeal lies in its flexibility. The fact that a developer can alter, extend, and enhance almost any aspect of Drupal without having to hack core. Historically this versatility has been made possible through the existence of hooks. Specially named PHP functions that are executed at critical points during the fulfillment of a request. And they've served the framework well for years. But times are changing, and Drupal 8 offers a variety of new patterns that all module developers will be required to learn, and understand.\n\nDrawing from my experience helping to document and explain these new patterns in various formats I hope to answer these questions:\n\nWhat are hooks, plugins, events, and services?\nWhat problems do these patterns seek to solve?\nHow do I decide which method to use and when?\nLooking ahead to the future, how do these patterns affect the code I write today?\nIf you're currently writing modules for Drupal 8, porting modules from Drupal 7, or think that you might have to sometime in the future, or even if you're just curious how the module ecosystem fits together behind the scenes  this session contains critical information for you. After attending this session you should have all the background information you need to make informed decisions about how your custom code can, and should, talk to Drupal in order to uphold best practices and write modules that are easy to maintain and play well with others in a post hook world.",
    "favorite": "0",
    "length": "01:07:11",
    "likes": "6",
    "recorded": "2016-05-09",
    "speakers": ["joe-shindelar"],
    "tags": [],
    "thumbnail_url": "https://i.ytimg.com/vi/tMM-I70ksQA/hqdefault.jpg",
    "title": "Altering, Extending, and Enhancing Drupal 8",
    "videos": [
        {
            "code": "tMM-I70ksQA",
            "type": "youtube"
        }
    ],
    "views": "755"
}