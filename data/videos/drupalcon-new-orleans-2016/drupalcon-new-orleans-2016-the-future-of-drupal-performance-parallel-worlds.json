{
    "abstract": "https://events.drupal.org/neworleans2016/sessions/future-drupal-performance-parallel-worlds",
    "description": "Drupal 9 could be faster than ever before!\n\nThe times are exciting! Drupal just started into its 8 cycle and the world is not standing still.\n\nHowever even with all the new technologies of PHP 7, dynamic page cache, BigPipe, Placeholders, etc. Drupal 8 still has a quite slow bootstrap phase, the internal page cache could be faster and a lot of time is wasted while waiting for I/O (Files, Database, APC, memcache, http requests, ...) and rebuilding of caches.\n\nPHP is ready! Are you?\n\nLets explore together in this core conversation how the future of Drupal performance could look and what we need to change internally to ensure we get back on par to fast-response systems like NodeJS.\n\nOne such thing that Drupal could start doing is to start using a parallelized approach. While Drupal is waiting, it could do other CPU intensive tasks until those are blocked again on I/O, then get back to the original task, etc.\n\nFor this we need a kind of event loop and a different structure within Drupal. But PHP is ready: Technologies like ReactPHP, icicle.io, etc. are stable now, libevent has seen continued development and been used by Facebook since quite a while and HHVM already has true asynchronous function calls, while PHP 7 is debating them at least.\n\nLazy load everything\n\nWe would also need a more \"passive\" bootstrap process, where things are loaded much more on demand and we go away from a pure request/response chaining model. This is a next step into utilizing services even more.\n\nExamples:\n\nWhen the current user is first used somewhere (as a service), he would be authenticated automatically.\nWhen the current route is used for the first time, routing occurs.\nWhen the current session is used, the session is verified.\n...\nThis would allow to skip slow and problematic parts of the bootstrap process and such easier allow a pre-bootstrap dynamic page cache.\n\nLets start into the future of Drupal performance together! Now!\n\nAudience\n\nCore Developers and Developers interested in innovative performance concepts\nHelpful Knowledge\n\nDrupal basics\nDrupal render pipeline basics: https://www.drupal.org/developing/api/8/render/pipeline\nSymfony Stack Basics (HttpKernel, Container, )\nAny Async PHP knowledge is a plus, but not expected\nGoals\n\nExplore current status of Drupal performance in different stages.\nEnsure Drupal 8/9 performance is fit for the future.\nExplore what performance can be like in the future.\nDiscuss event loops, parallel rendering, Drupal workers, pre-bootstrap dynamic page cache, ...\nSummary\n\nThe presenter has brought innovative render caching concepts into Drupal 8 and explored with BigPipe together with WimLeers a new approach to ensure all pages can be fast. This is bringing these introduced concepts to a new level of performance possibilities and bridging the gap from Symfony performance concepts to new async PHP libraries (e.g. icicle.io).",
    "favorite": "0",
    "length": "01:00:04",
    "likes": "2",
    "recorded": "2016-05-09",
    "speakers": ["fabian-franz"],
    "tags": [],
    "thumbnail_url": "https://i.ytimg.com/vi/ykrPYAGIYvU/hqdefault.jpg",
    "title": "The future of Drupal Performance - Parallel worlds",
    "videos": [
        {
            "code": "ykrPYAGIYvU",
            "type": "youtube"
        }
    ],
    "views": "208"
}