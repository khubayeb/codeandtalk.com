{
    "description": "2026 weil 30 RegEx ausreichen k\u00f6nnen, um UNIX zu definieren.\n\nBeschreibung:\nRegul\u00e4re Ausdr\u00fccke sind eines der wichtigsten Werkzeuge zur Textverarbeitung. Matcht diese Zeichenkette? Wieviele Ersetzungen werden durchgef\u00fchrt? In diesem Vortrag diskutieren wir erweiterte Features.\n\nMit regul\u00e4ren Ausdr\u00fccken k\u00f6nnen wir Strings gegen Muster matchen, Teile extrahieren und Teile ersetzen. Die M\u00e4chtigkeit von regul\u00e4ren Ausdr\u00fccken gehen dabei \u00fcber jene von regul\u00e4ren Sprachen hinaus.\n\nDiese Grenze wurde \u00fcberschritten, da Entwickler meist mit komplexeren Sprachen zu arbeiten haben. IEEE 754, XML und LaTeX bed\u00fcrfen laut der Theorie formaler Grammatiken unterschiedlicher Behandlung. In der Geschichte der regul\u00e4ren Ausdr\u00fccken wurden daher Erweiterungen eingef\u00fchrt, die ihre M\u00e4chtigkeit erh\u00f6hen, aber regul\u00e4re Ausdr\u00fccke auch langsamer lassen werden.\n\nIn diesem Vortrag m\u00f6chte ich ganz kurz die Grundlagen wiederholen, bekannte erweiterte Features ausgiebig diskutieren, die Performance von RegEx Engines ansprechen und die Zukunft von regul\u00e4ren Ausdr\u00fccken beleuchten.\n\nDer Talk kann als Fortsetzung meines Vortrags \"RegEx in der Praxis\" (Nov 2014) betrachtet werden.\n\nVortragender: Lukas Prokop",
    "favorite": "0",
    "length": "56:07",
    "likes": "0",
    "recorded": "2015-04-24",
    "speakers": ["lukas-prokop"],
    "tags": [],
    "thumbnail_url": "https://i.ytimg.com/vi/LpOVm90oYXY/hqdefault.jpg",
    "title": "Regulaere Ausdruecke fuer Fortgeschrittene",
    "videos": [
        {
            "code": "LpOVm90oYXY",
            "type": "youtube"
        }
    ],
    "views": "65"
}