{
    "description": "Mal (Make-a-Lisp) is a Clojure-like Lisp language invented by Joel Martin for educational purposes. It has interpreter implementations in 56 programming languages, including C, Java and Python, but also Make, PL/SQL, Vimscript and many others.\nBuilding a Mal implementation is a great way to learn about Lisp in general and about the specific language you're implementing in. The talk will present the step-by-step process of building such an interpreter, incrementally adding features like variables, conditions, tail-call optimization and macros, finally reaching the last step which is capable of self-hosting (running the Mal interpreter which is written in Mal).",
    "recorded": "2016-09-19",
    "speakers": ["dov-murik"],
    "tags": [],
    "thumbnail_url": "https://i.ytimg.com/vi/VzI0CIqT6s8/hqdefault.jpg",
    "title": "How to make a Lisp interpreter in 56 languages",
    "videos": [
        {
            "code": "VzI0CIqT6s8",
            "type": "youtube"
        }
    ]
}