{"description": "http://www.zimbu.org\nhttp://www.moolenaar.net\nPlaylist:\nhttps://www.youtube.com/playlist?list=PLBZBIkixHEidJ05uKM6orHYps0A0uNQ94\n\n26 10 2014 \nT-Dose 2014, Zimbu Designing a Programming Language From Experience, Bram Moolenaar \n\nProgrammers have been creating code for a long time now. We have learned what\nworks well and what leads to doom. With this knowledge we can design a\nprogramming language that helps programmers do their work productively.\nChoices can be made from experience, instead of using some academic theory or\nthe hot fashion of the year.\n\nEven though many programming languages already exist, it's hard to make a\nchoice for something like creating a text editor. Adding up all the\nrequirements, there really is not one language that fulfills them all. So\nlet's make one!\n\nThis talk takes a list of important observations from the daily work of\nprogrammers and discusses what that means for the choices made in designing a\nprogramming language. Many alternative solutions can be found in existing\nlanguages, some old and some new. It is mainly a matter of evaluating these\nalternatives and picking the right solution using our collective experience.\nBut in some cases we just can't find the right solution and have to invent\nsomething new.\n\nFor example, one important choice is how to structure code, how to keep code\nthat belongs together in once place. An observation is that we will always\nwant to add new features on top of existing code. There must be a good way to\nextend what is already there, without rewriting it for every new feature. The\nmechanism of inheritance in object-oriented programming solves this partly.\nWe have learned that multiple inheritance is too complex. But single\ninheritance doesn't cover what we need. The solution lies in mixins: blocks\nof functionality that can be used and re-used. This gives the programmer the\nchoice to use inheritance where that makes sense, and mixin code blocks where\nthat works well.\n\nAnother observation, which is rather obvious: Code is read ten times more\noften than it is written. Being able to write quickly is not all that\nimportant, being able to read and understand it easily is essential. Many\nlanguages have made the mistake to make code easy to write but hard to read.\nOthers require that variable types are specified in great detail, making it\ndifficult to see what the code is actually doing. It is possible to find a\nbalance between the two, there are a few new languages that have solutions in\nthis area.\n\nAn example of where no existing language offers a good solution is supporting\ncode generation. This is possible, of course, but requires writing a Makefile\nand/or scripts in some other language, which often end up not being portable\nand require installing a wild variety of other tools. We can observe this\ncausing serious maintenance problems. The solution comes not from existing\nprogramming languages, but from applications: plugins. Compiler plugins,\nwritten in the same language as the program itself, can be used to generate\ncode. An import statement can define the input and the plugin used to\nprocess it. This is easy to understand and avoids maintenance problems.\nPlugins can be distributed by themselves and re-used, just like one would\ndistribute a library.\n\nThe talk will go into a variety of these observations and their implications\nfor choices in programming language design. Illustrated with the current\nstate of the Zimbu language, see www.zimbu.org. The best check that a new\nlanguage works well is writing programs in it. Therefore the Zimbu compiler\nwas written in Zimbu. The talk will also explain how that is possible.\n\nBram Moolenaar (www.moolenaar.net) is well known for his work on Vim, a\npopular text editor that is available for almost every operating system. After\nstudying electronics and inventing parts of digital copying machines he\ndecided that creating open source software was more useful and fun. This\ndoesn't provide much income though, he currently works for Google, one of the\nfew companies that embraces open source software. In between he worked in\nUganda and is still helping poor children there through the ICCF foundation\n(www.iccf.nl).\n\nT-DOSE is a free and yearly event held in The Netherlands to promote use and development of Open Source Software. During this event Open Source projects, developers and visitors can exchange ideas and knowledge. ", "event": {"name": "T-DOSE 2014", "nickname": "t-dose-2014", "twitter": "TDOSE", "url": "http://www.t-dose.org/2014/schedule"}, "favorite": "0", "file_date": "2016-12-03", "filename": "t-dose-2014-zimbu-designing-a-programming-language-from-experience-bram-moolenaar", "length": "45:08", "likes": "17", "recorded": "2014-10-25", "short_description": "http://www.zimbu.org http://www.moolenaar.net Playlist: https://www.youtube.com/playlist?list=PLBZBIkixHEidJ05uKM6orHYps0A0uNQ94", "speaker_twitters": "", "speakers": {"bram-moolenaar": {"episodes": [], "hosting": [], "info": {"country": "Switzerland", "github": "brammool", "home": "http://www.moolenaar.net/", "name": "Bram Moolenaar"}, "videos": [{"event": {"name": "T-DOSE 2014", "nickname": "t-dose-2014", "twitter": "TDOSE", "url": "http://www.t-dose.org/2014/schedule"}, "filename": "t-dose-2014-zimbu-designing-a-programming-language-from-experience-bram-moolenaar", "recorded": "2014-10-25", "thumbnail_url": "https://i.ytimg.com/vi/_O-QdG2X1Lw/hqdefault.jpg", "title": "Zimbu Designing a Programming Language From Experience"}]}}, "tags": [], "thumbnail_url": "https://i.ytimg.com/vi/_O-QdG2X1Lw/hqdefault.jpg", "title": "Zimbu Designing a Programming Language From Experience", "tweet_video": "Zimbu%20Designing%20a%20Programming%20Language%20From%20Experience%20https%3A//codeandtalk.com/v/t-dose-2014/t-dose-2014-zimbu-designing-a-programming-language-from-experience-bram-moolenaar%20presented%20%40TDOSE", "videos": [{"code": "_O-QdG2X1Lw", "type": "youtube"}], "views": "1101"}